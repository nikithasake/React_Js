{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Desktop\\\\custom hook\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const [tasks, setTasks] = useState([]);\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks\n  } = useHttp();\n\n  // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://tasks-21fbe-default-rtdb.firebaseio.com/tasks.json'\n  //     );\n\n  //     if (!response.ok) { \n  //       throw new Error('Request failed!');\n  //     }\n\n  //     const data = await response.json();\n\n  //     const loadedTasks = [];\n\n  //     for (const taskKey in data) {\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  //     }\n\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  useEffect(() => {\n    const transformTasks = tasksObj => {\n      const loadedTasks = [];\n      for (const taskKey in tasksObj) {\n        loadedTasks.push({\n          id: taskKey,\n          text: tasksObj[taskKey].text\n        });\n      }\n      setTasks(loadedTasks);\n    };\n    fetchTasks({\n      url: 'https://tasks-21fbe-default-rtdb.firebaseio.com/tasks.json'\n    }, transformTasks);\n  }, [fetchTasks]);\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KnCqOaDDMhWq9V0L0tC1wC94Xoc=\", false, function () {\n  return [useHttp];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Tasks","NewTask","useHttp","React","useEffect","useState","useCallback","App","tasks","setTasks","isLoading","error","sendRequest","fetchTasks","transformTasks","tasksObj","loadedTasks","taskKey","push","id","text","url","taskAddHandler","task","prevTasks","concat"],"sources":["C:/Users/nikit/Desktop/custom hook/src/App.js"],"sourcesContent":["import Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\nimport React,{useEffect,useState,useCallback} from 'react';\nfunction App() {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n \n  const [tasks, setTasks] = useState([]);\n\n  const {isLoading,error,sendRequest:fetchTasks}=useHttp();\n\n  // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://tasks-21fbe-default-rtdb.firebaseio.com/tasks.json'\n  //     );\n\n  //     if (!response.ok) { \n  //       throw new Error('Request failed!');\n  //     }\n\n  //     const data = await response.json();\n\n  //     const loadedTasks = [];\n\n  //     for (const taskKey in data) {\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  //     }\n\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  useEffect(() => {\n    const transformTasks=((tasksObj)=>{\n      const loadedTasks = [];\n  \n      for (const taskKey in tasksObj) {\n        loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\n      }\n  \n      setTasks(loadedTasks);\n    });\n    fetchTasks({url: 'https://tasks-21fbe-default-rtdb.firebaseio.com/tasks.json'},transformTasks);\n    },[fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,KAAK,IAAEC,SAAS,EAACC,QAAQ,EAACC,WAAW,QAAO,OAAO;AAAC;AAC3D,SAASC,GAAG,GAAG;EAAA;EACb;EACA;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM;IAACK,SAAS;IAACC,KAAK;IAACC,WAAW,EAACC;EAAU,CAAC,GAACX,OAAO,EAAE;;EAExD;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEAE,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAGC,QAAQ,IAAG;MAChC,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,OAAO,IAAIF,QAAQ,EAAE;QAC9BC,WAAW,CAACE,IAAI,CAAC;UAAEC,EAAE,EAAEF,OAAO;UAAEG,IAAI,EAAEL,QAAQ,CAACE,OAAO,CAAC,CAACG;QAAK,CAAC,CAAC;MACjE;MAEAX,QAAQ,CAACO,WAAW,CAAC;IACvB,CAAE;IACFH,UAAU,CAAC;MAACQ,GAAG,EAAE;IAA4D,CAAC,EAACP,cAAc,CAAC;EAC9F,CAAC,EAAC,CAACD,UAAU,CAAC,CAAC;EAEjB,MAAMS,cAAc,GAAIC,IAAI,IAAK;IAC/Bd,QAAQ,CAAEe,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC;EACjD,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,OAAO;MAAC,SAAS,EAAED;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACtC,QAAC,KAAK;MACJ,KAAK,EAAEd,KAAM;MACb,OAAO,EAAEE,SAAU;MACnB,KAAK,EAAEC,KAAM;MACb,OAAO,EAAEE;IAAW;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACa;AAErB;AAAC,GA/DQN,GAAG;EAAA,QAMqCL,OAAO;AAAA;AAAA,KAN/CK,GAAG;AAiEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}