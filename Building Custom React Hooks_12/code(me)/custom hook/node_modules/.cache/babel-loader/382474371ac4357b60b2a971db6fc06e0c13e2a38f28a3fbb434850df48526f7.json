{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Desktop\\\\04-onwards-to-a-more-realistic-example\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const createTask = taskData => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: 'https://tasks-21fbe-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        text: taskText\n      }\n    }, createTask);\n    // setIsLoading(true);\n    // setError(null);\n    // try {\n    //   const response = await fetch(\n    //     'https://tasks-21fbe-default-rtdb.firebaseio.com/tasks.json',\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ text: taskText }),\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //     }\n    //   );\n\n    //   if (!response.ok) {\n    //     throw new Error('Request failed!');\n    //   }\n\n    //   const data = await response.json();\n\n    //   const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    //   const createdTask = { id: generatedId, text: taskText };\n\n    //   props.onAddTask(createdTask);\n    // } catch (err) {\n    //   setError(err.message || 'Something went wrong!');\n    // }\n    // setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"JoyexMXKKn7SbBANWuE0NYIBDqY=\", false, function () {\n  return [useHttp];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useState","Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createTask","taskData","generatedId","name","createdTask","id","text","taskText","onAddTask","enterTaskHandler","url","method","headers","body"],"sources":["C:/Users/nikit/Desktop/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\n\nconst NewTask = (props) => {\n\n  const {isLoading,error,sendRequest:sendTaskRequest}=useHttp();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  const createTask=(taskData)=>{\n    \n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n    \n  }\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest({url:'https://tasks-21fbe-default-rtdb.firebaseio.com/tasks.json',method:'POST',headers:{\n      'Content-Type':'application/json',\n    },\n    body:{text:taskText}\n  },createTask);\n    // setIsLoading(true);\n    // setError(null);\n    // try {\n    //   const response = await fetch(\n    //     'https://tasks-21fbe-default-rtdb.firebaseio.com/tasks.json',\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ text: taskText }),\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //     }\n    //   );\n\n    //   if (!response.ok) {\n    //     throw new Error('Request failed!');\n    //   }\n\n    //   const data = await response.json();\n\n    //   const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    //   const createdTask = { id: generatedId, text: taskText };\n\n    //   props.onAddTask(createdTask);\n    // } catch (err) {\n    //   setError(err.message || 'Something went wrong!');\n    // }\n    // setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAAC;AAE3C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EAEzB,MAAM;IAACC,SAAS;IAACC,KAAK;IAACC,WAAW,EAACC;EAAe,CAAC,GAACN,OAAO,EAAE;EAC7D;EACA;;EAEA,MAAMO,UAAU,GAAEC,QAAQ,IAAG;IAE3B,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACnC,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEH,WAAW;MAAEI,IAAI,EAAEC;IAAS,CAAC;IAEvDZ,KAAK,CAACa,SAAS,CAACJ,WAAW,CAAC;EAE9B,CAAC;EACD,MAAMK,gBAAgB,GAAG,MAAOF,QAAQ,IAAK;IAC3CR,eAAe,CAAC;MAACW,GAAG,EAAC,4DAA4D;MAACC,MAAM,EAAC,MAAM;MAACC,OAAO,EAAC;QACtG,cAAc,EAAC;MACjB,CAAC;MACDC,IAAI,EAAC;QAACP,IAAI,EAACC;MAAQ;IACrB,CAAC,EAACP,UAAU,CAAC;IACX;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,oBACE,QAAC,OAAO;IAAA,wBACN,QAAC,QAAQ;MAAC,WAAW,EAAES,gBAAiB;MAAC,OAAO,EAAEb;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9DC,KAAK,iBAAI;MAAA,UAAIA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEd,CAAC;AAAC,GAxDIH,OAAO;EAAA,QAEyCD,OAAO;AAAA;AAAA,KAFvDC,OAAO;AA0Db,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}