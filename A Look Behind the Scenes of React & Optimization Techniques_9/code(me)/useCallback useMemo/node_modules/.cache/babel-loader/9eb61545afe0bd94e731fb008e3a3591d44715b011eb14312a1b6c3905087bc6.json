{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Desktop\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState,useCallback } from 'react';\n// import Button from './components/UI/Button/Button'\n// import './App.css';\n// import DemoOutput from './components/Demo/DemoOutput';\n\n// function App() {\n//   const [showparagraph,setShowParagraph]=useState(false);\n//   const [allowToggle,setAllowToggle]=useState(false);\n\n//   console.log(\"App running\");\n//   const toggleParagraphHandler=useCallback(()=>{\n//     console.log(allowToggle);\n//     if(allowToggle)\n//       setShowParagraph((prevShowParagraph)=>!prevShowParagraph);\n//   },[allowToggle]);\n\n//   const allowToggleHandler=()=>{\n//     setAllowToggle(true);\n//   }\n\n//   return (\n//     <div className=\"app\">\n//       <h1>Hi there!</h1>\n//     <DemoOutput show={showparagraph}/>\n//     {/* {showparagraph && <p>This is new Paragraph</p>} */}\n//     <Button onClick={toggleParagraphHandler}>Toggle Paragraph</Button>\n//     <Button onClick={allowToggleHandler}>AllowToggle</Button>\n\n//     </div>\n//   );\n// }\n//  export default App;\n\nimport React, { useState, useCallback } from 'react';\nimport Button from './components/UI/Button/Button';\nimport DemoOutput from './components/Demo/DemoOutput';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showParagraph, setShowParagraph] = useState(false);\n  console.log('APP RUNNING');\n  const toggleParagraphHandler = useCallback(() => {\n    setShowParagraph(prevShowParagraph => !prevShowParagraph);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: showParagraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraphHandler,\n      children: \"Toggle Paragraph!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o+94QVVeAbLkXjGg6euTK4u66EU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Button","DemoOutput","App","showParagraph","setShowParagraph","console","log","toggleParagraphHandler","prevShowParagraph"],"sources":["C:/Users/nikit/Desktop/01-starting-setup/src/App.js"],"sourcesContent":["// import React, { useState,useCallback } from 'react';\n// import Button from './components/UI/Button/Button'\n// import './App.css';\n// import DemoOutput from './components/Demo/DemoOutput';\n\n// function App() {\n//   const [showparagraph,setShowParagraph]=useState(false);\n//   const [allowToggle,setAllowToggle]=useState(false);\n\n//   console.log(\"App running\");\n//   const toggleParagraphHandler=useCallback(()=>{\n//     console.log(allowToggle);\n//     if(allowToggle)\n//       setShowParagraph((prevShowParagraph)=>!prevShowParagraph);\n//   },[allowToggle]);\n\n//   const allowToggleHandler=()=>{\n//     setAllowToggle(true);\n//   }\n\n//   return (\n//     <div className=\"app\">\n//       <h1>Hi there!</h1>\n//     <DemoOutput show={showparagraph}/>\n//     {/* {showparagraph && <p>This is new Paragraph</p>} */}\n//     <Button onClick={toggleParagraphHandler}>Toggle Paragraph</Button>\n//     <Button onClick={allowToggleHandler}>AllowToggle</Button>\n  \n//     </div>\n//   );\n// }\n//  export default App;\n\nimport React, { useState, useCallback } from 'react';\n\nimport Button from './components/UI/Button/Button';\nimport DemoOutput from './components/Demo/DemoOutput';\nimport './App.css';\n\nfunction App() {\n  const [showParagraph, setShowParagraph] = useState(false);\n\n  console.log('APP RUNNING');\n\n  const toggleParagraphHandler = useCallback(() => {\n    setShowParagraph((prevShowParagraph) => !prevShowParagraph);\n  }, []);\n \n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoOutput show={showParagraph} />\n      <Button onClick={toggleParagraphHandler}>Toggle Paragraph!</Button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAEpD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEzDO,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAE1B,MAAMC,sBAAsB,GAAGR,WAAW,CAAC,MAAM;IAC/CK,gBAAgB,CAAEI,iBAAiB,IAAK,CAACA,iBAAiB,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,UAAU;MAAC,IAAI,EAAEL;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eACnC,QAAC,MAAM;MAAC,OAAO,EAAEI,sBAAuB;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/D;AAEV;AAAC,GAhBQL,GAAG;AAAA,KAAHA,GAAG;AAkBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}