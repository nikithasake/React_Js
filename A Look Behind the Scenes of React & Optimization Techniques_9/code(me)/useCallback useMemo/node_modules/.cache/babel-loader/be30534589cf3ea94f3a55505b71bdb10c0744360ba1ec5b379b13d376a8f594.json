{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Desktop\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport Button from './components/UI/Button/Button';\nimport './App.css';\nimport DemoOutput from './components/Demo/DemoOutput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showparagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  console.log(\"App running\");\n  // const toggleParagraphHandler=useCallback(()=>{\n  //   console.log(allowToggle);\n  //   if(allowToggle)\n  //     setShowParagraph((prevShowParagraph)=>!prevShowParagraph);\n  // },[allowToggle]);\n\n  let toggleParagraphHandler = useMemo(() => {\n    setShowParagraph(prevShowParagraph => !prevShowParagraph);\n  });\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n\n  // return (\n  //   <div className=\"app\">\n  //     <h1>Hi there!</h1>\n  //   <DemoOutput show={showparagraph}/>\n  //   {/* {showparagraph && <p>This is new Paragraph</p>} */}\n  //   <Button onClick={toggleParagraphHandler}>Toggle Paragraph</Button>\n  //   <Button onClick={allowToggleHandler}>AllowToggle</Button>\n\n  //   </div>\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: showparagraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraphHandler,\n      children: \"Toggle Paragraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), \"//Button is custom button\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n  // );\n}\n_s(App, \"DsxjVAL/H49/cWeFeQrY749z0rw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","Button","DemoOutput","App","showparagraph","setShowParagraph","allowToggle","setAllowToggle","console","log","toggleParagraphHandler","prevShowParagraph","allowToggleHandler"],"sources":["C:/Users/nikit/Desktop/01-starting-setup/src/App.js"],"sourcesContent":["import React, { useState,useMemo } from 'react';\nimport Button from './components/UI/Button/Button'\nimport './App.css';\nimport DemoOutput from './components/Demo/DemoOutput';\n\nfunction App() {\n  const [showparagraph,setShowParagraph]=useState(false);\n  const [allowToggle,setAllowToggle]=useState(false);\n\n  console.log(\"App running\");\n  // const toggleParagraphHandler=useCallback(()=>{\n  //   console.log(allowToggle);\n  //   if(allowToggle)\n  //     setShowParagraph((prevShowParagraph)=>!prevShowParagraph);\n  // },[allowToggle]);\n\n  let toggleParagraphHandler=useMemo(()=>{\n    setShowParagraph((prevShowParagraph)=>!prevShowParagraph);\n  });\n  const allowToggleHandler=()=>{\n    setAllowToggle(true);\n  }\n\n  // return (\n  //   <div className=\"app\">\n  //     <h1>Hi there!</h1>\n  //   <DemoOutput show={showparagraph}/>\n  //   {/* {showparagraph && <p>This is new Paragraph</p>} */}\n  //   <Button onClick={toggleParagraphHandler}>Toggle Paragraph</Button>\n  //   <Button onClick={allowToggleHandler}>AllowToggle</Button>\n  \n  //   </div>\n     return (\n      <div className=\"app\">\n        <DemoOutput show={showparagraph}/>\n        <Button onClick={toggleParagraphHandler}>Toggle Paragraph</Button>//Button is custom button\n      </div>\n    );\n  // );\n}\n export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,OAAO,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,8BAA8B;AAAC;AAEtD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,aAAa,EAACC,gBAAgB,CAAC,GAACN,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACO,WAAW,EAACC,cAAc,CAAC,GAACR,QAAQ,CAAC,KAAK,CAAC;EAElDS,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B;EACA;EACA;EACA;EACA;;EAEA,IAAIC,sBAAsB,GAACV,OAAO,CAAC,MAAI;IACrCK,gBAAgB,CAAEM,iBAAiB,IAAG,CAACA,iBAAiB,CAAC;EAC3D,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAC,MAAI;IAC3BL,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACG,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,UAAU;MAAC,IAAI,EAAEH;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE,eAClC,QAAC,MAAM;MAAC,OAAO,EAAEM,sBAAuB;MAAA,UAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAS,6BACpE;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;EAEV;AACF;AAAC,GAlCQP,GAAG;AAAA,KAAHA,GAAG;AAmCX,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}