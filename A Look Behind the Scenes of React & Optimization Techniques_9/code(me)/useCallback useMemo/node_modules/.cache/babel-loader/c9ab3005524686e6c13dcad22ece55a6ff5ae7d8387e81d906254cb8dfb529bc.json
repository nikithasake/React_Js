{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Desktop\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport Button from './components/UI/Button/Button';\nimport './App.css';\nimport DemoOutput from './components/Demo/DemoOutput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showparagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  console.log(\"App running\");\n  const toggleParagraphHandler = useCallback(() => {\n    console.log(allowToggle);\n    if (allowToggle) {\n      setShowParagraph(prevShowParagraph => !prevShowParagraph);\n    }\n  }, [allowToggle]);\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: showparagraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraphHandler,\n      children: \"Toggle Paragraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"AllowToggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C1njc3djqTsNk53CBMNTUHfIYrE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Button","DemoOutput","App","showparagraph","setShowParagraph","allowToggle","setAllowToggle","console","log","toggleParagraphHandler","prevShowParagraph","allowToggleHandler"],"sources":["C:/Users/nikit/Desktop/01-starting-setup/src/App.js"],"sourcesContent":["import React, { useState,useCallback } from 'react';\nimport Button from './components/UI/Button/Button'\nimport './App.css';\nimport DemoOutput from './components/Demo/DemoOutput';\n\nfunction App() {\n\n  const [showparagraph,setShowParagraph]=useState(false);\n  const [allowToggle,setAllowToggle]=useState(false);\n\n  console.log(\"App running\");\n\n  const toggleParagraphHandler=useCallback(()=>{\n    console.log(allowToggle);\n    if(allowToggle){\n      setShowParagraph((prevShowParagraph)=>!prevShowParagraph);\n    }\n  },[allowToggle]);\n\n  const allowToggleHandler=()=>{\n    setAllowToggle(true);\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoOutput show={showparagraph}/>\n    {/* {showparagraph && <p>This is new Paragraph</p>} */}\n    <Button onClick={toggleParagraphHandler}>Toggle Paragraph</Button>\n    <Button onClick={allowToggleHandler}>AllowToggle</Button>\n  \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,WAAW,QAAQ,OAAO;AACnD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,8BAA8B;AAAC;AAEtD,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,aAAa,EAACC,gBAAgB,CAAC,GAACN,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACO,WAAW,EAACC,cAAc,CAAC,GAACR,QAAQ,CAAC,KAAK,CAAC;EAElDS,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAE1B,MAAMC,sBAAsB,GAACV,WAAW,CAAC,MAAI;IAC3CQ,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;IACxB,IAAGA,WAAW,EAAC;MACbD,gBAAgB,CAAEM,iBAAiB,IAAG,CAACA,iBAAiB,CAAC;IAC3D;EACF,CAAC,EAAC,CAACL,WAAW,CAAC,CAAC;EAEhB,MAAMM,kBAAkB,GAAC,MAAI;IAC3BL,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,UAAU;MAAC,IAAI,EAAEH;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE,eAEpC,QAAC,MAAM;MAAC,OAAO,EAAEM,sBAAuB;MAAA,UAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAS,eAClE,QAAC,MAAM;MAAC,OAAO,EAAEE,kBAAmB;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAEnD;AAEV;AAAC,GA5BQT,GAAG;AAAA,KAAHA,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}