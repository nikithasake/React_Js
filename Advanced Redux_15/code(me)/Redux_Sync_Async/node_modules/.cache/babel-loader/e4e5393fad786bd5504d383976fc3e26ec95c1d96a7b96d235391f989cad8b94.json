{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Desktop\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  //post-->new data will not be added and it will override the existing data.\n  //override the existing data with the incoming data.\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n  // const sendCartData=async()=>{\n  //   dispatch(uiActions.showNotification({\n  //     status:'pending',\n  //     title:'sending...',\n  //     message:'sending cart data!',\n  //   })\n  //   );\n  // const response=await fetch(\n  // 'https://redux-4288d-default-rtdb.firebaseio.com/cart.json',\n  // {\n  //   method:'PUT',\n  //   body:JSON.stringify(cart),\n  // }\n  // );\n  // if(!response.ok){\n  //   throw new Error('sending cart data failed');\n  // }\n\n  // const responseData=await response.json();\n\n  // dispatch(uiActions.showNotification({\n  //   status:'success',\n  //   title:'Success..',\n  //   message:'sending cart data successfully!',\n  // })\n  // );\n  // };\n\n  // if(isInitial){\n  //   isInitial=false;\n  //   return;\n  // }\n  //   sendCartData().catch(error=>{\n  // dispatch(uiActions.showNotification({\n  //   status:'error',\n  //   title:'Error!',\n  //   message:'sending cart data failed!',\n  // })\n  // );\n  // });\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VR1M6IVuuPBVs+1RM1Xbj4a8yvI=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","useDispatch","useSelector","Cart","Layout","Products","uiActions","Notification","fetchCartData","sendCartData","isInitial","App","showCart","state","ui","cartIsVisible","cart","dispatch","notification","changed","status","title","message"],"sources":["C:/Users/nikit/Desktop/01-starting-project/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-actions';\n\nlet isInitial=true;\n\nfunction App() {\n  const showCart=useSelector(state=>state.ui.cartIsVisible);\n  const cart=useSelector(state=>state.cart);\n   const dispatch=useDispatch();\n\n   const notification=useSelector(state=>state.ui.notification);\n\n   useEffect(()=>{\n    dispatch(fetchCartData());\n   },[dispatch])\n  //post-->new data will not be added and it will override the existing data.\n  //override the existing data with the incoming data.\n  useEffect(()=>{\n    if(isInitial){\n      isInitial=false;\n      return;\n    }\n    if(cart.changed){\n      dispatch(sendCartData(cart));\n    }\n  },[cart,dispatch]);\n    // const sendCartData=async()=>{\n    //   dispatch(uiActions.showNotification({\n    //     status:'pending',\n    //     title:'sending...',\n    //     message:'sending cart data!',\n    //   })\n    //   );\n    // const response=await fetch(\n    // 'https://redux-4288d-default-rtdb.firebaseio.com/cart.json',\n    // {\n    //   method:'PUT',\n    //   body:JSON.stringify(cart),\n    // }\n    // );\n    // if(!response.ok){\n    //   throw new Error('sending cart data failed');\n    // }\n\n    // const responseData=await response.json();\n\n    // dispatch(uiActions.showNotification({\n    //   status:'success',\n    //   title:'Success..',\n    //   message:'sending cart data successfully!',\n    // })\n    // );\n  // };\n\n  // if(isInitial){\n  //   isInitial=false;\n  //   return;\n  // }\n  //   sendCartData().catch(error=>{\n      // dispatch(uiActions.showNotification({\n      //   status:'error',\n      //   title:'Error!',\n      //   message:'sending cart data failed!',\n      // })\n      // );\n    // });\n \n  return (\n    <Fragment>\n      {notification && <Notification status={notification.status}\n       title={notification.title} \n       message={notification.message}\n       />}\n    <Layout>\n      {showCart&& <Cart />}\n      <Products />\n    </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,aAAa,EAAEC,YAAY,QAAQ,sBAAsB;AAAC;AAEnE,IAAIC,SAAS,GAAC,IAAI;AAElB,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,QAAQ,GAACV,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EACzD,MAAMC,IAAI,GAACd,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACG,IAAI,CAAC;EACxC,MAAMC,QAAQ,GAAChB,WAAW,EAAE;EAE5B,MAAMiB,YAAY,GAAChB,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,EAAE,CAACI,YAAY,CAAC;EAE5DlB,SAAS,CAAC,MAAI;IACbiB,QAAQ,CAACT,aAAa,EAAE,CAAC;EAC1B,CAAC,EAAC,CAACS,QAAQ,CAAC,CAAC;EACd;EACA;EACAjB,SAAS,CAAC,MAAI;IACZ,IAAGU,SAAS,EAAC;MACXA,SAAS,GAAC,KAAK;MACf;IACF;IACA,IAAGM,IAAI,CAACG,OAAO,EAAC;MACdF,QAAQ,CAACR,YAAY,CAACO,IAAI,CAAC,CAAC;IAC9B;EACF,CAAC,EAAC,CAACA,IAAI,EAACC,QAAQ,CAAC,CAAC;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACI;EACA;EACA;EACA;EACA;EACA;EACF;;EAEF,oBACE,QAAC,QAAQ;IAAA,WACNC,YAAY,iBAAI,QAAC,YAAY;MAAC,MAAM,EAAEA,YAAY,CAACE,MAAO;MAC1D,KAAK,EAAEF,YAAY,CAACG,KAAM;MAC1B,OAAO,EAAEH,YAAY,CAACI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAC5B,eACL,QAAC,MAAM;MAAA,WACJV,QAAQ,iBAAG,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACpB,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEf;AAAC,GA1EQD,GAAG;EAAA,QACKT,WAAW,EACfA,WAAW,EACND,WAAW,EAEPC,WAAW;AAAA;AAAA,KALxBS,GAAG;AA4EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}