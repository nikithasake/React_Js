{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      console.log(\"new Item:\" + newItem);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      console.log(\"existingItem:\" + existingItem);\n      state.totalQuantity++;\n      state.changed = true;\n      console.log(state.totalQuantity);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        console.log(\"existingItem.quantity\" + existingItem.quantity);\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n        console.log(\"existingItem.totalPrice\" + existingItem.totalPrice);\n      }\n    },\n    removeItemCFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      console.log(\"existingItem in remove\" + existingItem);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n        console.log(\"qua 1\" + state.items);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\n\n// export const sendCartData=(cart)=>{\n//     return async(dispatch)=>{\n//     dispatch(\n//       uiActions.showNotification({\n//       status:'pending',\n//       title:'sending...',\n//       message:'sending cart data!',\n//     })\n//    );\n\n//    const sendRequest=async()=>{\n//     const response=await fetch(\n//         'https://redux-4288d-default-rtdb.firebaseio.com/cart.json',\n//         {\n//           method:'PUT',\n//           body:JSON.stringify(cart),\n//         }\n//         );\n//         if(!response.ok){\n//           throw new Error('sending cart data failed');\n//         }\n//     };\n//    try{\n//     await sendRequest();   \n//     dispatch(\n//         uiActions.showNotification({\n//         status:'success',\n//         title:'Success..',\n//         message:'sending cart data successfully!',\n//       })\n//       );\n//    }\n//    catch(error){\n//     dispatch(uiActions.showNotification({\n//         status:'error',\n//         title:'Error!',\n//         message:'sending cart data failed!',\n//       })\n//       );\n//    }\n//    };\n// };\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","console","log","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemCFromCart","filter","cartActions","actions"],"sources":["C:/Users/nikit/Desktop/Redux_Sync_Async/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialState:{\r\n        items:[],\r\n        totalQuantity:0,\r\n        changed:false,\r\n    },\r\n    reducers:{\r\n        replaceCart(state,action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n          },\r\n        addItemToCart(state,action){\r\n            const newItem=action.payload;\r\n            console.log(\"new Item:\"+newItem);\r\n            const existingItem=state.items.find(item=>item.id === newItem.id);\r\n            console.log(\"existingItem:\"+existingItem);\r\n            state.totalQuantity++;\r\n            state.changed=true;\r\n            console.log(state.totalQuantity);\r\n            if(!existingItem){\r\n                state.items.push({\r\n                    id:newItem.id,\r\n                    price:newItem.price,\r\n                    quantity:1,\r\n                    totalPrice:newItem.price,\r\n                    name:newItem.title\r\n                });\r\n            }else{\r\n                existingItem.quantity++;\r\n                console.log(\"existingItem.quantity\"+existingItem.quantity);\r\n                existingItem.totalPrice=existingItem.totalPrice+newItem.price;\r\n                console.log(\"existingItem.totalPrice\"+existingItem.totalPrice);\r\n            }\r\n        },\r\n        removeItemCFromCart(state,action){\r\n            const id=action.payload;\r\n            const existingItem=state.items.find(item=>item.id === id);\r\n            console.log(\"existingItem in remove\"+existingItem)\r\n            state.totalQuantity--;\r\n            state.changed=true;\r\n            if(existingItem.quantity === 1){\r\n                state.items= state.items.filter(item=>item.id !== id);\r\n                console.log(\"qua 1\"+state.items)\r\n            }else{\r\n                existingItem.quantity--;\r\n                 existingItem.totalPrice=existingItem.totalPrice-existingItem.price;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n// export const sendCartData=(cart)=>{\r\n//     return async(dispatch)=>{\r\n//     dispatch(\r\n//       uiActions.showNotification({\r\n//       status:'pending',\r\n//       title:'sending...',\r\n//       message:'sending cart data!',\r\n//     })\r\n//    );\r\n\r\n//    const sendRequest=async()=>{\r\n//     const response=await fetch(\r\n//         'https://redux-4288d-default-rtdb.firebaseio.com/cart.json',\r\n//         {\r\n//           method:'PUT',\r\n//           body:JSON.stringify(cart),\r\n//         }\r\n//         );\r\n//         if(!response.ok){\r\n//           throw new Error('sending cart data failed');\r\n//         }\r\n//     };\r\n//    try{\r\n//     await sendRequest();   \r\n//     dispatch(\r\n//         uiActions.showNotification({\r\n//         status:'success',\r\n//         title:'Success..',\r\n//         message:'sending cart data successfully!',\r\n//       })\r\n//       );\r\n//    }\r\n//    catch(error){\r\n//     dispatch(uiActions.showNotification({\r\n//         status:'error',\r\n//         title:'Error!',\r\n//         message:'sending cart data failed!',\r\n//       })\r\n//       );\r\n//    }\r\n//    };\r\n// };\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}