{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      console.log(\"new Item:\" + newItem);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      console.log(\"existingItem:\" + existingItem);\n      state.totalQuantity++;\n      console.log(state.totalQuantity);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        console.log(\"existingItem.quantity\" + existingItem.quantity);\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n        console.log(\"existingItem.totalPrice\" + existingItem.totalPrice);\n      }\n    },\n    removeItemCFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      console.log(\"existingItem in remove\" + existingItem);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n        console.log(\"qua 1\" + state.items);\n      } else {\n        existingItem.quantity--;\n        //existingItem.totalPrice=existingItem.totalPrice-existingItem.price;\n      }\n    }\n  }\n});\n\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'sending...',\n      message: 'sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-4288d-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success..',\n        message: 'sending cart data successfully!'\n      }));\n    } catch (error) {}\n    const responseData = await response.json();\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","console","log","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemCFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","responseData","json","cartActions","actions"],"sources":["C:/Users/nikit/Desktop/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialState:{\r\n        items:[],\r\n        totalQuantity:0,\r\n    },\r\n    reducers:{\r\n        replaceCart(state,action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n          },\r\n        addItemToCart(state,action){\r\n            const newItem=action.payload;\r\n            console.log(\"new Item:\"+newItem);\r\n            const existingItem=state.items.find(item=>item.id === newItem.id);\r\n            console.log(\"existingItem:\"+existingItem);\r\n            state.totalQuantity++;\r\n            console.log(state.totalQuantity);\r\n            if(!existingItem){\r\n                state.items.push({\r\n                    id:newItem.id,\r\n                    price:newItem.price,\r\n                    quantity:1,\r\n                    totalPrice:newItem.price,\r\n                    name:newItem.title\r\n                });\r\n            }else{\r\n                existingItem.quantity++;\r\n                console.log(\"existingItem.quantity\"+existingItem.quantity);\r\n                existingItem.totalPrice=existingItem.totalPrice+newItem.price;\r\n                console.log(\"existingItem.totalPrice\"+existingItem.totalPrice);\r\n            }\r\n        },\r\n        removeItemCFromCart(state,action){\r\n            const id=action.payload;\r\n            const existingItem=state.items.find(item=>item.id === id);\r\n            console.log(\"existingItem in remove\"+existingItem)\r\n            state.totalQuantity--;\r\n            if(existingItem.quantity === 1){\r\n                state.items= state.items.filter(item=>item.id !== id);\r\n                console.log(\"qua 1\"+state.items)\r\n            }else{\r\n                existingItem.quantity--;\r\n                //existingItem.totalPrice=existingItem.totalPrice-existingItem.price;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst sendCartData=(cart)=>{\r\n    return async(dispatch)=>{\r\n    dispatch(\r\n      uiActions.showNotification({\r\n      status:'pending',\r\n      title:'sending...',\r\n      message:'sending cart data!',\r\n    })\r\n   );\r\n\r\n   const sendRequest=async()=>{\r\n    const response=await fetch(\r\n        'https://redux-4288d-default-rtdb.firebaseio.com/cart.json',\r\n        {\r\n          method:'PUT',\r\n          body:JSON.stringify(cart),\r\n        }\r\n        );\r\n        if(!response.ok){\r\n          throw new Error('sending cart data failed');\r\n        }\r\n   }\r\n   try{\r\n    await sendRequest();\r\n      \r\n    dispatch(uiActions.showNotification({\r\n        status:'success',\r\n        title:'Success..',\r\n        message:'sending cart data successfully!',\r\n      })\r\n      );\r\n   }\r\n   catch(error){\r\n  \r\n   }\r\n   \r\n\r\n    const responseData=await response.json();\r\n };\r\n};\r\n\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAACF,WAAW,CAAC;EACxBG,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IACTC,KAAK,EAAC,EAAE;IACRC,aAAa,EAAC;EAClB,CAAC;EACDC,QAAQ,EAAC;IACLC,WAAW,CAACC,KAAK,EAACC,MAAM,EAAE;MACtBD,KAAK,CAACH,aAAa,GAAGI,MAAM,CAACC,OAAO,CAACL,aAAa;MAClDG,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO,CAACN,KAAK;IACpC,CAAC;IACHO,aAAa,CAACH,KAAK,EAACC,MAAM,EAAC;MACvB,MAAMG,OAAO,GAACH,MAAM,CAACC,OAAO;MAC5BG,OAAO,CAACC,GAAG,CAAC,WAAW,GAACF,OAAO,CAAC;MAChC,MAAMG,YAAY,GAACP,KAAK,CAACJ,KAAK,CAACY,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MACjEL,OAAO,CAACC,GAAG,CAAC,eAAe,GAACC,YAAY,CAAC;MACzCP,KAAK,CAACH,aAAa,EAAE;MACrBQ,OAAO,CAACC,GAAG,CAACN,KAAK,CAACH,aAAa,CAAC;MAChC,IAAG,CAACU,YAAY,EAAC;QACbP,KAAK,CAACJ,KAAK,CAACe,IAAI,CAAC;UACbD,EAAE,EAACN,OAAO,CAACM,EAAE;UACbE,KAAK,EAACR,OAAO,CAACQ,KAAK;UACnBC,QAAQ,EAAC,CAAC;UACVC,UAAU,EAACV,OAAO,CAACQ,KAAK;UACxBlB,IAAI,EAACU,OAAO,CAACW;QACjB,CAAC,CAAC;MACN,CAAC,MAAI;QACDR,YAAY,CAACM,QAAQ,EAAE;QACvBR,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAACC,YAAY,CAACM,QAAQ,CAAC;QAC1DN,YAAY,CAACO,UAAU,GAACP,YAAY,CAACO,UAAU,GAACV,OAAO,CAACQ,KAAK;QAC7DP,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAACC,YAAY,CAACO,UAAU,CAAC;MAClE;IACJ,CAAC;IACDE,mBAAmB,CAAChB,KAAK,EAACC,MAAM,EAAC;MAC7B,MAAMS,EAAE,GAACT,MAAM,CAACC,OAAO;MACvB,MAAMK,YAAY,GAACP,KAAK,CAACJ,KAAK,CAACY,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MACzDL,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAACC,YAAY,CAAC;MAClDP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAGU,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAC;QAC3Bb,KAAK,CAACJ,KAAK,GAAEI,KAAK,CAACJ,KAAK,CAACqB,MAAM,CAACR,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;QACrDL,OAAO,CAACC,GAAG,CAAC,OAAO,GAACN,KAAK,CAACJ,KAAK,CAAC;MACpC,CAAC,MAAI;QACDW,YAAY,CAACM,QAAQ,EAAE;QACvB;MACJ;IACJ;EACJ;AACJ,CAAC,CAAC;;AAEF,MAAMK,YAAY,GAAEC,IAAI,IAAG;EACvB,OAAO,MAAMC,QAAQ,IAAG;IACxBA,QAAQ,CACN5B,SAAS,CAAC6B,gBAAgB,CAAC;MAC3BC,MAAM,EAAC,SAAS;MAChBP,KAAK,EAAC,YAAY;MAClBQ,OAAO,EAAC;IACV,CAAC,CAAC,CACF;IAED,MAAMC,WAAW,GAAC,YAAS;MAC1B,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CACtB,2DAA2D,EAC3D;QACEC,MAAM,EAAC,KAAK;QACZC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACX,IAAI;MAC1B,CAAC,CACA;MACD,IAAG,CAACM,QAAQ,CAACM,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACL,CAAC;IACD,IAAG;MACF,MAAMR,WAAW,EAAE;MAEnBJ,QAAQ,CAAC5B,SAAS,CAAC6B,gBAAgB,CAAC;QAChCC,MAAM,EAAC,SAAS;QAChBP,KAAK,EAAC,WAAW;QACjBQ,OAAO,EAAC;MACV,CAAC,CAAC,CACD;IACJ,CAAC,CACD,OAAMU,KAAK,EAAC,CAEZ;IAGC,MAAMC,YAAY,GAAC,MAAMT,QAAQ,CAACU,IAAI,EAAE;EAC3C,CAAC;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAC3C,SAAS,CAAC4C,OAAO;AAC1C,eAAe5C,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}