{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Desktop\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, redirect, useLoaderData, useParams, useRouteLoaderData } from \"react-router-dom\";\nimport { json } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"SP42t2+YEs6IFgo/PrvLllNbJZk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return {isError:true,message:'Could not fetch events'};\n    //throw{message:'Could not fetch events'};\n    // throw new Response(JSON.stringify({message:'could not fetch events.'}),{\n    //   status:500,\n    // });\n\n    return json({\n      message: 'could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n    // return response;\n  }\n}\n\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: await loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Await","defer","redirect","useLoaderData","useParams","useRouteLoaderData","json","EventItem","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["C:/Users/nikit/Desktop/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Await, defer, redirect, useLoaderData, useParams, useRouteLoaderData } from \"react-router-dom\";\r\nimport { json } from \"react-router-dom\";\r\nimport EventItem from '../components/EventItem';\r\nimport EventsList from \"../components/EventsList\";\r\nimport { Suspense } from \"react\";\r\nfunction EventDetailPage(){\r\n\r\n    const {event,events}=useRouteLoaderData('event-detail');\r\n\r\n    return (\r\n    <>\r\n    {/* <h1>EventDetailPage</h1>\r\n    <p>Event ID:{params.eventId}</p> */}\r\n    <Suspense fallback={<p style={{textAlign:'center'}}>Loading....</p>}>\r\n    <Await resolve={event}>\r\n        {(loadedEvent)=><EventItem event={loadedEvent}/>}\r\n    </Await>\r\n    </Suspense>\r\n    <Suspense fallback={<p style={{textAlign:'center'}}>Loading....</p>}>\r\n    <Await resolve={event}>\r\n   \r\n    {loadEvents => <EventsList events={loadEvents}/>}\r\n    </Await>\r\n    </Suspense>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id){\r\n    const response=await fetch('http://localhost:8080/events/'+id);\r\n    if(!response.ok){\r\n        throw json({message:'Could not fetch details for selected event.'},{\r\n            status:500\r\n        })\r\n    }else{\r\n        const resData = await response.json();\r\n        return resData.event;\r\n    }\r\n\r\n}\r\nasync function loadEvents(){\r\n    const response = await fetch('http://localhost:8080/events');\r\n  \r\n    if (!response.ok) {\r\n      //return {isError:true,message:'Could not fetch events'};\r\n      //throw{message:'Could not fetch events'};\r\n      // throw new Response(JSON.stringify({message:'could not fetch events.'}),{\r\n      //   status:500,\r\n      // });\r\n  \r\n      return json(\r\n        {message:'could not fetch events.'},\r\n        {\r\n          status:500,\r\n        }\r\n      );\r\n    } else {\r\n      const resData = await response.json();\r\n      return resData.events;\r\n      // return response;\r\n    \r\n    }\r\n  }\r\n\r\nexport async function loader({request,params}){\r\n    const id=params.eventId;\r\n    return defer({\r\n        event:await loadEvent(id),\r\n        events:loadEvents(),\r\n    })\r\n}\r\n\r\nexport async function action({params,request}){\r\n    const eventId=params.eventId;\r\n    const response=await fetch('http://localhost:8080/events/'+eventId,{\r\n        method:request.method,\r\n    });\r\n    if(!response.ok){\r\n        throw json({message:'Could not delete event.'},{\r\n            status:500\r\n        })\r\n    }\r\n    return redirect('/events');\r\n    }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}