{"ast":null,"code":"var _s = $RefreshSig$();\n// import { Link } from \"react-router-dom\";\n\n// const DUMMY_EVENTS=[\n// {\n//     id:'e1',\n//     title:'Some event',\n// },\n// {\n//     id:'e2',\n//     title:'Another event',\n// }\n// ]\n// function EventsPage(){\n//     return <>\n//          <h1>EventsPage</h1>\n//          <ul>\n//             {DUMMY_EVENTS.map(event=>\n//             <li key={event.id}>\n//                 <Link to={event.id}>{event.title}</Link>\n//             </li>\n//             )}\n//          </ul>\n\n//     </>\n\n// }\n\n// export default EventsPage;\n\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n  // const events=data.events;\n\n  // return (\n  //   <>\n  //     <EventsList events={events} />\n  //   </>\n  // );\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return {isError:true,message:'Could not fetch events'};\n    //throw{message:'Could not fetch events'};\n    // throw new Response(JSON.stringify({message:'could not fetch events.'}),{\n    //   status:500,\n    // });\n\n    return json({\n      message: 'could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData;\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","EventsPage","_s","data","_c","loadEvents","response","fetch","ok","message","status","loader","defer","events","$RefreshReg$"],"sources":["C:/Users/nikit/Desktop/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["// import { Link } from \"react-router-dom\";\r\n\r\n// const DUMMY_EVENTS=[\r\n// {\r\n//     id:'e1',\r\n//     title:'Some event',\r\n// },\r\n// {\r\n//     id:'e2',\r\n//     title:'Another event',\r\n// }\r\n// ]\r\n// function EventsPage(){\r\n//     return <>\r\n//          <h1>EventsPage</h1>\r\n//          <ul>\r\n//             {DUMMY_EVENTS.map(event=>\r\n//             <li key={event.id}>\r\n//                 <Link to={event.id}>{event.title}</Link>\r\n//             </li>\r\n//             )}\r\n//          </ul>\r\n\r\n//     </>\r\n\r\n// }\r\n\r\n// export default EventsPage;\r\n\r\n\r\nimport { useLoaderData,json } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n\r\n  const data = useLoaderData();\r\n  // if(data.isError){\r\n  //   return <p>{data.message}</p>\r\n  // }\r\n  // const events=data.events;\r\n\r\n  // return (\r\n  //   <>\r\n  //     <EventsList events={events} />\r\n  //   </>\r\n  // );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents(){\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    //return {isError:true,message:'Could not fetch events'};\r\n    //throw{message:'Could not fetch events'};\r\n    // throw new Response(JSON.stringify({message:'could not fetch events.'}),{\r\n    //   status:500,\r\n    // });\r\n\r\n    return json(\r\n      {message:'could not fetch events.'},\r\n      {\r\n        status:500,\r\n      }\r\n    );\r\n  } else {\r\n    // const resData = await response.json();\r\n    // return resData;\r\n    return response;\r\n  \r\n  }\r\n}\r\n\r\nexport  function loader() {\r\n  return defer({\r\n    events:loadEvents()\r\n  })\r\n}"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAGA,SAASA,aAAa,EAACC,IAAI,QAAQ,kBAAkB;AACrD,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAMC,IAAI,GAAGL,aAAa,EAAE;EAC5B;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;AACF;AAACI,EAAA,CAbQD,UAAU;EAAA,QAEJH,aAAa;AAAA;AAAAM,EAAA,GAFnBH,UAAU;AAenB,eAAeA,UAAU;AAEzB,eAAeI,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;;IAEA,OAAOT,IAAI,CACT;MAACU,OAAO,EAAC;IAAyB,CAAC,EACnC;MACEC,MAAM,EAAC;IACT,CAAC,CACF;EACH,CAAC,MAAM;IACL;IACA;IACA,OAAOJ,QAAQ;EAEjB;AACF;AAEA,OAAQ,SAASK,MAAMA,CAAA,EAAG;EACxB,OAAOC,KAAK,CAAC;IACXC,MAAM,EAACR,UAAU;EACnB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}