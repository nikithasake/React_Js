{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === 'PASSWORD_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === 'PASSWORD_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: undefined\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const {\n    isvalid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsvalid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"check form validaty\");\n      setFormIsValid(emailIsValid && passwordIsvalid);\n    }, 500);\n    return () => {\n      console.log(\"cleanup\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsvalid]);\n  const emailChangeHandler = event => {\n    //setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    // setFormIsValid(\n    //   event.target.value.includes('@') && enteredPassword.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    // setFormIsValid(event.target.value.trim().length > 6 && emailState.isValid);\n    dispatchPassword({\n      type: \"PASSWORD_INPUT\",\n      val: event.target.value\n    });\n  };\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: \"PASSWORD_BLUR\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/tw53VtUog4/z0sNgFH6842IpoY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","undefined","passwordState","dispatchPassword","isvalid","emailIsValid","passwordIsvalid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/nikit/Desktop/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === 'PASSWORD_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === 'PASSWORD_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: undefined,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\", isValid: null,\n  });\n\n  const {isvalid:emailIsValid}=emailState;\n  const {isValid:passwordIsvalid}=passwordState;\n    useEffect(()=>{\n      const identifier= setTimeout(()=>{\n         console.log(\"check form validaty\")\n         setFormIsValid(\n           emailIsValid && passwordIsvalid\n         );\n       },500);\n\n       return ()=>{\n         console.log(\"cleanup\");\n         clearTimeout(identifier);\n        }\n\n   },[emailIsValid,passwordIsvalid]);\n \n  const emailChangeHandler = (event) => {\n    //setEnteredEmail(event.target.value);\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n    // setFormIsValid(\n    //   event.target.value.includes('@') && enteredPassword.trim().length > 6\n    // );\n  };\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    // setFormIsValid(event.target.value.trim().length > 6 && emailState.isValid);\n    dispatchPassword({ type: \"PASSWORD_INPUT\", val: event.target.value });\n  };\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid);\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({ type: \"PASSWORD_BLUR\" });};\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value); };\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"\n          }`}>\n          <label htmlFor=\"email\">E-Mail</label>\n        <input type=\"email\" id=\"email\" value={emailState.value} onChange={emailChangeHandler}\n            onBlur={validateEmailHandler} /></div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`} >\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" value={passwordState.value} onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}/>\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div></form></Card>);};\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}