{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  //it can be any name\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n// const counterReducer=(state=initialState,action)=>{\n//     if(action.type===\"increment\"){\n//        return {\n//             counter:state.counter+1,\n//             // showCounter:state.showCounter\n//        };\n//     }\n//     if(action.type===\"increase\"){\n//         return {\n//              counter:state.counter+action.amount,\n//              showCounter:state.showCounter\n//         };\n//      }\n//     if(action.type===\"decrement\"){\n//         return {\n//             counter:state.counter-1,\n//             showCounter:state.showCounter\n//         };\n//     }\n//     if(action.type===\"toggle\"){\n//         return{\n//             showCounter:!state.showCounter,\n//             counter:state.counter\n//         }\n//     }\n//     return state;\n\n// }\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["C:/Users/nikit/Desktop/01-starting-project/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\r\nimport { createSlice,configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialState={counter:0,showCounter:true};\r\nconst counterSlice=createSlice({\r\n    name:'counter',//it can be any name\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state,action){\r\n            state.counter=state.counter+action.payload;\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter=!state.showCounter;\r\n        }\r\n    }\r\n})\r\n// const counterReducer=(state=initialState,action)=>{\r\n//     if(action.type===\"increment\"){\r\n//        return {\r\n//             counter:state.counter+1,\r\n//             // showCounter:state.showCounter\r\n//        };\r\n//     }\r\n//     if(action.type===\"increase\"){\r\n//         return {\r\n//              counter:state.counter+action.amount,\r\n//              showCounter:state.showCounter\r\n//         };\r\n//      }\r\n//     if(action.type===\"decrement\"){\r\n//         return {\r\n//             counter:state.counter-1,\r\n//             showCounter:state.showCounter\r\n//         };\r\n//     }\r\n//     if(action.type===\"toggle\"){\r\n//         return{\r\n//             showCounter:!state.showCounter,\r\n//             counter:state.counter\r\n//         }\r\n//     }\r\n//     return state;\r\n\r\n// }\r\n\r\n\r\n\r\nconst store=configureStore({\r\n    reducer:counterSlice.reducer\r\n});\r\n\r\nexport const counterActions=counterSlice.actions;\r\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAASC,WAAW,EAACC,cAAc,QAAQ,kBAAkB;AAE7D,MAAMC,YAAY,GAAC;EAACC,OAAO,EAAC,CAAC;EAACC,WAAW,EAAC;AAAI,CAAC;AAC/C,MAAMC,YAAY,GAACL,WAAW,CAAC;EAC3BM,IAAI,EAAC,SAAS;EAAC;EACfJ,YAAY;EACZK,QAAQ,EAAC;IACLC,SAAS,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAAS,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQ,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACN,OAAO,GAACM,KAAK,CAACN,OAAO,GAACS,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDC,aAAa,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACL,WAAW,GAAC,CAACK,KAAK,CAACL,WAAW;IACxC;EACJ;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,MAAMW,KAAK,GAACd,cAAc,CAAC;EACvBe,OAAO,EAACX,YAAY,CAACW;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAACZ,YAAY,CAACa,OAAO;AAChD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}