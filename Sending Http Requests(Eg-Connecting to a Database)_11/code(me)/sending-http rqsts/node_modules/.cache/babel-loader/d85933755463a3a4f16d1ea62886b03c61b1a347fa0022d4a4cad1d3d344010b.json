{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Desktop\\\\02-sending-a-get-request\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // function fetchMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transformedMovies = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transformedMovies);\n  //     });\n  // }\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error('smtg went wrong');\n      }\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 45\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Found no movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 48\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ELiEBhvXtrOv+CE4HCOFyXojNEg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","data","json","ok","Error","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","length"],"sources":["C:/Users/nikit/Desktop/02-sending-a-get-request/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const[isLoading,setIsLoading]=useState(false);\n  const [error,setError]=useState(null);\n\n  // function fetchMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transformedMovies = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transformedMovies);\n  //     });\n  // }\n async function fetchMoviesHandler() {\n  setIsLoading(true);\n  setError(null);\n  try{\n    const response=await fetch('https://swapi.dev/api/films/');\n    const data=await response.json();\n    if(!response.ok){\n      throw new Error('smtg went wrong');\n    }\n  \n        const transformedMovies = data.results.map((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date,\n          };\n        });\n        setMovies(transformedMovies);\n        setIsLoading(false);\n      }catch(error){\n          setError(error.message);\n          setIsLoading(false);\n      }\n \n}\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading &&  movies.length >0 && <MoviesList movies={movies} />}\n        {!isLoading &&  movies.length === 0 && <p>Found no movies</p>}\n        {isLoading && <p>Loading.....</p>}\n        {!isLoading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACK,SAAS,EAACC,YAAY,CAAC,GAACN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,IAAI,CAAC;;EAErC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACD,eAAeS,kBAAkB,GAAG;IACnCH,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAG;MACD,MAAME,QAAQ,GAAC,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC1D,MAAMC,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAChC,IAAG,CAACH,QAAQ,CAACI,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEI,MAAMC,iBAAiB,GAAGJ,IAAI,CAACK,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;QACxD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UAAU;UACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;UACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;UACpCC,WAAW,EAAEN,SAAS,CAACO;QACzB,CAAC;MACH,CAAC,CAAC;MACFtB,SAAS,CAACY,iBAAiB,CAAC;MAC5BV,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,QAAMC,KAAK,EAAC;MACTC,QAAQ,CAACD,KAAK,CAACoB,OAAO,CAAC;MACvBrB,YAAY,CAAC,KAAK,CAAC;IACvB;EAEN;EAEE,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAA,uBACE;QAAQ,OAAO,EAAEG,kBAAmB;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAClD,eACV;MAAA,WACG,CAACJ,SAAS,IAAKF,MAAM,CAACyB,MAAM,GAAE,CAAC,iBAAI,QAAC,UAAU;QAAC,MAAM,EAAEzB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,EACjE,CAACE,SAAS,IAAKF,MAAM,CAACyB,MAAM,KAAK,CAAC,iBAAI;QAAA,UAAG;MAAe;QAAA;QAAA;QAAA;MAAA,QAAI,EAC5DvB,SAAS,iBAAI;QAAA,UAAG;MAAY;QAAA;QAAA;QAAA;MAAA,QAAI,EAChC,CAACA,SAAS,IAAIE,KAAK,iBAAI;QAAA,UAAIA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAErB;AAAC,GA9DQL,GAAG;AAAA,KAAHA,GAAG;AAgEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}